buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"  // QueryDsl plugin
	id 'java'
	id "org.flywaydb.flyway" version "9.8.1"
}

group = 'com.techeeresc.tab'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'   // gradle 5 이상부터는 이처럼 설정해주어야한다.
	testAnnotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java' // 개발 환경에서 사용하는 DB(MySQL)
	runtimeOnly 'com.h2database:h2:2.1.210' // 테스트 코드 작성시 사용할 DB(H2)
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'

	// QueryDSL dependencies
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	// flyway library dependency
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// jsoup
	implementation 'org.jsoup:jsoup:1.14.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

// script for querydsl
def querydslDir = "$buildDir/generated/querydsl"   // path for using at QueryDsl
querydsl {   // QueryDsl Setting
	jpa = true   // using JPA
	querydslSourcesDir = querydslDir  // using path
}

sourceSets {  //sourceset for build
	main.java.srcDir querydslDir
}

configurations {   // compileClassPath extends
	// querydsl.extendsFrom complieClasspath
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {   // option for compile
	options.annotationProcessorPath = configurations.querydsl
}